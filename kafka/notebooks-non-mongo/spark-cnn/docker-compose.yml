services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    container_name: zookeeper-non-mongo
    environment:
      ZOOKEEPER_CLIENT_PORT: ${zookeeper_port}
      ZOOKEEPER_TICK_TIME: "2000"
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka-non-mongo
    ports:
      - "${kafka_port}:9092"
    environment:
      # Listen cả trong và ngoài container
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      # Advertise địa chỉ cho cả network nội bộ và host ngoài Docker
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_BROKER_ID: "0"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${zookeeper_port}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - kafka-network

  pyspark-app:
    build: .
    container_name: pyspark-app
    depends_on:
      - kafka
    ports:
      - ${main_container_port}:8888
    volumes:
      - ./code:/home/code
    environment:
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=jupyter
      - PYSPARK_DRIVER_PYTHON_OPTS="notebook --no-browser --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''"
    networks:
      - kafka-network
networks:
  kafka-network:
    driver: bridge